# images nginx conf

upstream apps {
         # local testing
         server 192.168.59.103:8080;
         server 192.168.59.103:8090;

         # production
         # server localhost:8080;
         # server localhost:8090;
}

server {
       listen 80 default_server;
       listen [::]:80 default_server ipv6only=on;
       root /usr/share/nginx/html/images;
       index index.html;
       server_name localhost;

       error_page 404 /404.html;
       error_page 500 502 503 504 /50x.html;

       # Proxy and cache to S3
       location /images {
                # From: https://coderwall.com/p/rlguog/nginx-as-proxy-for-amazon-s3-public-private-files
                set $s3_bucket        'images.social.s3.amazonaws.com';
                set $url_full         '$1';
                proxy_http_version     1.1;
                proxy_set_header       Host $s3_bucket;
                proxy_set_header       Authorization '';
                proxy_hide_header      x-amz-id-2;
                proxy_hide_header      x-amz-request-id;
                proxy_hide_header      Set-Cookie;
                proxy_ignore_headers   "Set-Cookie";
                proxy_buffering        off;
                proxy_intercept_errors on;
                resolver               172.16.0.23 valid=300s;
                resolver_timeout       10s;
                proxy_pass             http://$s3_bucket/$url_full;
       }

       # Proxy to the apps
       location /upload {
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header  Host $http_host;
                proxy_redirect    off;
                proxy_pass http://apps;
       }

       location /ping {
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header  Host $http_host;
                proxy_redirect    off;
                proxy_pass http://apps;
       }

       location / {
                try_files $uri $uri/ =404;
       }
}

# HTTPS server
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
